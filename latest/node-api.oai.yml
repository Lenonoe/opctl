swagger: '2.0'
info:
  version: '0.1'
  title: node api
consumes:
  - application/json
produces:
  - application/json
  - text/plain
paths:
  /events/stream:
    get:
      summary: Get an event stream
      description: |
        The connection will be upgraded to use the websocket protocol.
        Inspired by Docker Remote API [GET /events endpoint](https://docs.docker.com/engine/reference/api/docker_remote_api_v1.24/#/monitor-dockers-events)
      parameters:
        - name: filter
          in: query
          description: |
            A json encoded object supporting the following:

            |attribute|type|description|
            |--|--|--|
            |opIds|array of strings|events will be filtered to those w/ matching opIds|
          required: false
          type: string
          format: json
      tags:
        - events
      responses:
        '101':
          description: Switching Protocols
          headers:
            Upgrade:
              type: string
              enum:
                - websocket
            Connection:
              type: string
              enum:
                - Upgrade
          schema:
            type: array
            items:
              $ref: '#/definitions/Event'
        '400':
          description: Bad Request
          schema:
            type: string
  /liveness:
    get:
      summary: Get liveness of node
      tags:
        - liveness
      responses:
        '200':
          description: OK
        '500':
          description: Internal Server Error
  /ops/starts:
    post:
      summary: Starts an op
      tags:
        - ops
      parameters:
        - name: body
          in: body
          schema:
            type: object
            required:
              - opPkgRef
            properties:
              args:
                type: array
                items:
                  $ref: '#/definitions/OpArg'
              opPkgRef:
                type: string
      responses:
        '201':
          description: Created
          headers:
            Correlation-Id:
              type: string
          schema:
            description: The id of the [started] op
            type: string
        '400':
          description: Bad Request
          schema:
            type: string
        '500':
          description: Internal Server Error
          schema:
            type: string
  /ops/kills:
    post:
      summary: Kills an op
      tags:
        - ops
      parameters:
        - name: body
          in: body
          required: true
          schema:
            type: object
            required:
              - opRunId
            properties:
              opRunId:
                type: string
      responses:
        '201':
          description: Created
        '400':
          description: Bad Request
          schema:
            type: string
        '500':
          description: Internal Server Error
          schema:
            type: string
definitions:
  Event:
    type: object
    properties:
      timestamp:
        type: string
        format: dateTime
      # @TODO: use oneOf as soon as OpenAPI v3 is released
      containerExited:
        $ref: '#/definitions/ContainerExitedEvent'
      containerStarted:
        $ref: '#/definitions/ContainerStartedEvent'
      containerStdErrWrittenTo:
        $ref: '#/definitions/ContainerStdErrWrittenToEvent'
      containerStdOutWrittenTo:
        $ref: '#/definitions/ContainerStdOutWrittenToEvent'
      opEnded:
        $ref: '#/definitions/OpEndedEvent'
      opStarted:
        $ref: '#/definitions/OpStartedEvent'
      opEncounteredError:
        $ref: '#/definitions/OpEncounteredErrorEvent'
  ContainerExitedEvent:
    type: object
    properties:
      containerRef:
        type: string
      exitCode:
        type: integer
      rootOpId:
        type: string
      containerId:
        type: string
      opPkgRef:
        type: string
  ContainerStartedEvent:
    type: object
    properties:
      containerRef:
        type: string
      rootOpId:
        type: string
      containerId:
        type: string
      opPkgRef:
        type: string
  ContainerStdErrWrittenToEvent:
    type: object
    properties:
      containerRef:
        type: string
      data:
        type: string
        format: binary
      rootOpId:
        type: string
      containerId:
        type: string
      opPkgRef:
        type: string
  ContainerStdOutWrittenToEvent:
    type: object
    properties:
      containerRef:
        type: string
      data:
        type: string
        format: binary
      rootOpId:
        type: string
      containerId:
        type: string
      opPkgRef:
        type: string
  OpEncounteredErrorEvent:
    type: object
    properties:
      rootOpId:
        type: string
      msg:
        type: string
      opId:
        type: string
      opPkgRef:
        type: string
  OpEndedEvent:
    type: object
    properties:
      rootOpId:
        type: string
      opId:
        type: string
      opPkgRef:
        type: string
      outcome:
        enum: [ SUCCEEDED, FAILED, KILLED]
        type: string
  OpStartedEvent:
    type: object
    properties:
      rootOpId:
        type: string
      opId:
        type: string
      opPkgRef:
        type: string
  OpArg:
    description: An arg to be provided to the op
    type: object
    # @TODO: use patternProperties if/when OpenAPI spec supports it
