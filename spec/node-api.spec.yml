swagger: '2.0'
info:
  version: '0.1.5'
  title: Node API
consumes:
  - application/json
produces:
  - application/json
  - text/plain
paths:
  /events/stream:
    get:
      summary: Get an event stream
      description: |
        The connection will be upgraded to use the websocket protocol.
      parameters:
        - name: filter
          in: query
          description: |
            A json encoded object supporting the following:

            |attribute|type|description|
            |--|--|--|
            |rootOpIds|array of strings|allows filtering events to those w/ rootOpId matching one of those provided|
            |since|datetime|allows filtering events to those occurring on/after the provided datetime|

          required: false
          type: string
          format: json
      tags: [ events ]
      responses:
        '101':
          description: HTTP/1.1 ["Switching Protocols" response status code](https://tools.ietf.org/html/rfc7231#section-6.2.2)
          headers:
            Upgrade:
              type: string
              enum:
                - websocket
            Connection:
              type: string
              enum:
                - Upgrade
          schema:
            type: array
            items:
              $ref: '#/definitions/Event'
        '400':
          description: HTTP/1.1 ["Bad Request" response status code](https://tools.ietf.org/html/rfc7231#section-6.5.1)
          schema:
            type: string
  /liveness:
    get:
      summary: Get liveness of node
      tags: [ liveness ]
      responses:
        '200':
          description: HTTP/1.1 ["OK" response status code](https://tools.ietf.org/html/rfc7231#section-6.3.1)
        '500':
          description: HTTP/1.1 ["Internal Server Error" response status code](https://tools.ietf.org/html/rfc7231#section-6.6.1)
  /ops/starts:
    post:
      summary: Starts an op
      tags: [ ops ]
      parameters:
        - name: body
          in: body
          required: true
          schema:
            required: [ pkg ]
            properties:
              args:
                type: object
                # @TODO: use patternProperties if/when OpenAPI spec supports it
                description: arguments passed to the op to satisfy inputs
                # @TODO: use patternProperties if/when OpenAPI spec supports it
                additionalProperties:
                  $ref: '#/definitions/Value'
              pkg:
                required: [ ref ]
                properties:
                  ref:
                    type: string
                    format: uri-reference
                    description: reference to a pkg
                  pullCreds:
                    description: credentials used during authentication with the source of the package
                    required: [ username, password ]
                    properties:
                      username:
                        type: string
                      password:
                        type: string
      responses:
        '201':
          description: HTTP/1.1 ["Created" response status code](https://tools.ietf.org/html/rfc7231#section-6.3.2)
          schema:
            description: The id of the [started] op
            type: string
        '400':
          description: HTTP/1.1 ["Bad Request" response status code](https://tools.ietf.org/html/rfc7231#section-6.5.1)
          schema:
            type: string
        '500':
          description: HTTP/1.1 ["Internal Server Error" response status code](https://tools.ietf.org/html/rfc7231#section-6.6.1)
          schema:
            type: string
  /ops/kills:
    post:
      summary: Kills an op
      tags: [ ops ]
      parameters:
        - name: body
          in: body
          required: true
          schema:
            required: [ opRunId ]
            properties:
              opRunId:
                type: string
      responses:
        '201':
          description: HTTP/1.1 ["Created" response status code](https://tools.ietf.org/html/rfc7231#section-6.3.2)
        '400':
          description: HTTP/1.1 ["Bad Request" response status code](https://tools.ietf.org/html/rfc7231#section-6.5.1)
          schema:
            type: string
        '500':
          description: HTTP/1.1 ["Internal Server Error" response status code](https://tools.ietf.org/html/rfc7231#section-6.6.1)
          schema:
            type: string
  /pkgs/{ref}/contents:
    get:
      summary: Lists package contents
      tags: [ pkgs ]
      produces:
        - application/json
      parameters:
        - name: ref
          in: path
          required: true
          type: string
      responses:
        '200':
          description: HTTP/1.1 ["OK" response status code](https://tools.ietf.org/html/rfc7231#section-6.3.1)
          schema:
            properties:
              path:
                type: string
              size:
                type: integer
          headers:
            Content-Length:
              description: HTTP/1.1 ["Content-Length" header field](https://tools.ietf.org/html/rfc7230#section-3.3.2)
              type: integer
        '400':
          description: HTTP/1.1 ["Bad Request" response status code](https://tools.ietf.org/html/rfc7231#section-6.5.1)
          schema:
            type: string
        '404':
          description: HTTP/1.1 ["Not Found" response status code](https://tools.ietf.org/html/rfc7231#section-6.5.4)
          schema:
            type: string
        '500':
          description: HTTP/1.1 ["Internal Server Error" response status code](https://tools.ietf.org/html/rfc7231#section-6.6.1)
          schema:
            type: string
  /pkgs/{ref}/contents/{path}:
    get:
      summary: Gets pkg content at path
      tags: [ pkgs ]
      produces:
        - application/octet-stream
        - multipart/byteranges
        - text/plain
      parameters:
        - name: ref
          in: path
          required: true
          type: string
        - name: path
          in: path
          required: true
          type: string
        - name: Range
          description: HTTP/1.1 ["Range" header field](https://tools.ietf.org/html/rfc7233#section-3.1)
          in: header
          required: false
          type: string
      responses:
        '200':
          description: HTTP/1.1 ["OK" response status code](https://tools.ietf.org/html/rfc7231#section-6.3.1)
          schema:
            type: file
          headers:
            Accept-Ranges:
              description: HTTP/1.1 ["Accept-Ranges" header field](https://tools.ietf.org/html/rfc7233#section-2.3)
              type: string
              enum:
                - bytes
            Content-Length:
              description: HTTP/1.1 ["Content-Length" header field](https://tools.ietf.org/html/rfc7230#section-3.3.2)
              type: integer
        '206':
          description: HTTP/1.1 ["Partial Content" response status code](https://tools.ietf.org/html/rfc7233#section-4.1)
          schema:
            type: string
          headers:
            Content-Length:
              description: HTTP/1.1 ["Content-Length" header field](https://tools.ietf.org/html/rfc7230#section-3.3.2)
              type: integer
            Content-Range:
              description: HTTP/1.1 ["Content-Range" header field](https://tools.ietf.org/html/rfc7233#section-4.2)
              type: string
        '404':
          description: HTTP/1.1 ["Not Found" response status code](https://tools.ietf.org/html/rfc7231#section-6.5.4)
          schema:
            type: string
        '416':
          description: HTTP/1.1 ["Range Not Satisfiable" response status code](https://tools.ietf.org/html/rfc7233#section-4.4)
          schema:
            type: string
        '500':
          description: HTTP/1.1 ["Internal Server Error" response status code](https://tools.ietf.org/html/rfc7231#section-6.6.1)
          schema:
            type: string
    head:
      summary: Gets pkg content at path
      tags: [ pkgs ]
      produces:
        - application/octet-stream
        - multipart/byteranges
        - text/plain
      parameters:
        - name: ref
          in: path
          required: true
          type: string
        - name: path
          in: path
          required: true
          type: string
        - name: Range
          description: HTTP/1.1 ["Range" header field](https://tools.ietf.org/html/rfc7233#section-3.1)
          in: header
          required: false
          type: string
      responses:
        '200':
          description: HTTP/1.1 ["OK" response status code](https://tools.ietf.org/html/rfc7231#section-6.3.1)
          headers:
            Accept-Ranges:
              description: HTTP/1.1 ["Accept-Ranges" header field](https://tools.ietf.org/html/rfc7233#section-2.3)
              type: string
              enum:
                - bytes
            Content-Length:
              description: HTTP/1.1 ["Content-Length" header field](https://tools.ietf.org/html/rfc7230#section-3.3.2)
              type: integer
        '206':
          description: HTTP/1.1 ["Partial Content" response status code](https://tools.ietf.org/html/rfc7233#section-4.1)
          schema:
            type: string
          headers:
            Content-Length:
              description: HTTP/1.1 ["Content-Length" header field](https://tools.ietf.org/html/rfc7230#section-3.3.2)
              type: integer
            Content-Range:
              description: HTTP/1.1 ["Content-Range" header field](https://tools.ietf.org/html/rfc7233#section-4.2)
              type: string
        '404':
          description: HTTP/1.1 ["Not Found" response status code](https://tools.ietf.org/html/rfc7231#section-6.5.4)
          schema:
            type: string
        '416':
          description: HTTP/1.1 ["Range Not Satisfiable" response status code](https://tools.ietf.org/html/rfc7233#section-4.4)
          schema:
            type: string
        '500':
          description: HTTP/1.1 ["Internal Server Error" response status code](https://tools.ietf.org/html/rfc7231#section-6.6.1)
          schema:
            type: string
definitions:
  Value:
    description: a typed value
    properties:
      # @TODO: use oneOf as soon as OpenAPI v3 is released
      dir:
        description: path
        type: string
      file:
        description: path
        type: string
      number:
        type: number
      socket:
        description: socket address
        type: string
      string:
        type: string
  Event:
    properties:
      timestamp:
        type: string
        format: dateTime
      # @TODO: use oneOf as soon as OpenAPI v3 is released
      containerExited:
        $ref: '#/definitions/ContainerExitedEvent'
      containerStarted:
        $ref: '#/definitions/ContainerStartedEvent'
      containerStdErrWrittenTo:
        $ref: '#/definitions/ContainerStdErrWrittenToEvent'
      containerStdOutWrittenTo:
        $ref: '#/definitions/ContainerStdOutWrittenToEvent'
      opEnded:
        $ref: '#/definitions/OpEndedEvent'
      opStarted:
        $ref: '#/definitions/OpStartedEvent'
      opErred:
        $ref: '#/definitions/OpErredEvent'
      parallelCallEnded:
        $ref: '#/definitions/ParallelCallEndedEvent'
      serialCallEnded:
        $ref: '#/definitions/SerialCallEndedEvent'
  ContainerExitedEvent:
    properties:
      imageRef:
        type: string
      exitCode:
        type: integer
      rootOpId:
        type: string
      containerId:
        type: string
      pkgRef:
        type: string
      outputs:
        type: object
        # @TODO: use patternProperties if/when OpenAPI spec supports it
        additionalProperties:
          $ref: '#/definitions/Value'
  ContainerStartedEvent:
    properties:
      imageRef:
        type: string
      rootOpId:
        type: string
      containerId:
        type: string
      pkgRef:
        type: string
  ContainerStdErrWrittenToEvent:
    properties:
      imageRef:
        type: string
      data:
        type: string
        format: binary
      rootOpId:
        type: string
      containerId:
        type: string
      pkgRef:
        type: string
  ContainerStdOutWrittenToEvent:
    properties:
      imageRef:
        type: string
      data:
        type: string
        format: binary
      rootOpId:
        type: string
      containerId:
        type: string
      pkgRef:
        type: string
  OpErredEvent:
    properties:
      rootOpId:
        type: string
      msg:
        type: string
      opId:
        type: string
      pkgRef:
        type: string
  OpEndedEvent:
    properties:
      rootOpId:
        type: string
      opId:
        type: string
      pkgRef:
        type: string
      outcome:
        enum: [ SUCCEEDED, FAILED, KILLED]
        type: string
      outputs:
        type: object
        # @TODO: use patternProperties if/when OpenAPI spec supports it
        additionalProperties:
          $ref: '#/definitions/Value'
  OpStartedEvent:
    properties:
      rootOpId:
        type: string
      opId:
        type: string
      pkgRef:
        type: string
  ParallelCallEndedEvent:
    properties:
      rootOpId:
        type: string
      callId:
        type: string
  SerialCallEndedEvent:
    properties:
      rootOpId:
        type: string
      callId:
        type: string
      outputs:
        type: object
        # @TODO: use patternProperties if/when OpenAPI spec supports it
        additionalProperties:
          $ref: '#/definitions/Value'
