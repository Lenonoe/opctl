{
  "$schema": "http://json-schema.org/draft-04/schema#",
  "title": "packageManifest",
  "description": "Manifest for a package",
  "properties": {
    "name": {
      "description": "Name of the op",
      "type": "string"
    },
    "description": {
      "description": "Description of the op",
      "type": "string"
    },
    "inputs": {
      "$ref": "#/definitions/param"
    },
    "outputs": {
      "$ref": "#/definitions/param"
    },
    "run": {
      "$ref": "#/definitions/scg"
    },
    "version": {
      "description": "Version of the op",
      "$ref": "#/definitions/semVer"
    }
  },
  "required": [
    "name"
  ],
  "additionalProperties": false,
  "definitions": {
    "arrayParam": {
      "title": "arrayParam",
      "description": "Array parameter of an op",
      "type": "array",
      "properties": {
        "array": {
          "properties": {
            "description": {
              "type": "string"
            },
            "default": {
              "type": "array"
            },
            "isSecret": {
              "description": "If the array is secret",
              "type": "boolean"
            },
            "constraints": {
              "$ref": "#/definitions/arrayConstraints"
            }
          },
          "additionalProperties": false
        }
      },
      "additionalProperties": false,
      "required": [
        "array"
      ]
    },
    "arrayConstraints": {
      "title": "arrayConstraints",
      "type": "array",
      "properties": {
        "maxItems": {
          "description": "JSON Schema [maxItems keyword](https://tools.ietf.org/html/draft-wright-json-schema-validation-00#section-5.10)",
          "type": "integer",
          "minimum": 0
        },
        "minItems": {
          "description": "JSON Schema [minItems keyword](https://tools.ietf.org/html/draft-wright-json-schema-validation-00#section-5.11)",
          "type": "integer",
          "minimum": 0
        },
        "items": {
          "description": "JSON Schema [items keyword](https://tools.ietf.org/html/draft-wright-json-schema-validation-01#section-6.9)",
          "oneOf": [
            {
              "$ref": "#/definitions/typeConstraints"
            },
            {
              "items": {
                "$ref": "#/definitions/typeConstraints"
              }
            }
          ]
        },
        "additionalItems": {
          "description": "JSON Schema [additionalItems keyword](https://tools.ietf.org/html/draft-wright-json-schema-validation-01#section-6.10)",
          "$ref": "#/definitions/typeConstraints"
        },
        "uniqueItems": {
          "description": "JSON Schema [uniqueItems keyword](https://tools.ietf.org/html/draft-wright-json-schema-validation-01#section-6.13)",
          "type": "boolean"
        }
      },
      "additionalProperties": false
    },
    "dirParam": {
      "title": "dirParam",
      "description": "Directory parameter of an op",
      "type": "object",
      "properties": {
        "dir": {
          "properties": {
            "description": {
              "type": "string"
            },
            "default": {
              "description": "Default value; an absolute path from root of pkg or relative path interpreted from the dir in which the op is run",
              "type": "string"
            },
            "isSecret": {
              "description": "If the directory is secret",
              "type": "boolean"
            }
          },
          "additionalProperties": false
        }
      },
      "additionalProperties": false,
      "required": [
        "dir"
      ]
    },
    "fileParam": {
      "title": "fileParam",
      "description": "File parameter of an op",
      "type": "object",
      "properties": {
        "file": {
          "properties": {
            "description": {
              "type": "string"
            },
            "default": {
              "description": "Default value; an absolute path from root of pkg or relative path interpreted from the dir in which the op is run",
              "type": "string"
            },
            "isSecret": {
              "description": "If the file is secret",
              "type": "boolean"
            }
          },
          "additionalProperties": false
        }
      },
      "additionalProperties": false,
      "required": [
        "file"
      ]
    },
    "pullCreds": {
      "type": "object",
      "description": "Credentials used during authentication with the source of an image or package",
      "properties": {
        "username": {
          "$ref": "#/definitions/interpolatedString"
        },
        "password": {
          "$ref": "#/definitions/interpolatedString"
        }
      },
      "required": [
        "username",
        "password"
      ],
      "additionalProperties": false
    },
    "numberConstraints": {
      "title": "numberConstraints",
      "type": "object",
      "properties": {
        "allOf": {
          "description": "JSON Schema [allOf keyword](https://tools.ietf.org/html/draft-wright-json-schema-validation-00#section-5.22)",
          "type": "array",
          "items": {
            "$ref": "#/definitions/numberConstraints"
          }
        },
        "anyOf": {
          "description": "JSON Schema [anyOf keyword](https://tools.ietf.org/html/draft-wright-json-schema-validation-00#section-5.23)",
          "type": "array",
          "items": {
            "$ref": "#/definitions/numberConstraints"
          }
        },
        "enum": {
          "description": "JSON Schema [enum keyword](https://tools.ietf.org/html/draft-wright-json-schema-validation-00#section-5.20)",
          "type": "array",
          "items": {
            "type": "number"
          }
        },
        "format": {
          "oneOf": [
            {
              "title": "integer",
              "description": "Requires the number be an integer",
              "type": "string",
              "enum": [
                "integer"
              ]
            }
          ]
        },
        "maximum": {
          "description": "JSON Schema [maximum keyword](https://tools.ietf.org/html/draft-wright-json-schema-validation-00#section-5.2)",
          "type": "number"
        },
        "minimum": {
          "description": "JSON Schema [minimum keyword](https://tools.ietf.org/html/draft-wright-json-schema-validation-00#section-5.4)",
          "type": "number"
        },
        "multipleOf": {
          "description": "JSON Schema [multipleOf keyword](https://tools.ietf.org/html/draft-wright-json-schema-validation-00#section-5.1)",
          "type": "number"
        },
        "not": {
          "description": "JSON Schema [not keyword](https://tools.ietf.org/html/draft-wright-json-schema-validation-00#section-5.25)",
          "$ref": "#/definitions/numberConstraints"
        },
        "oneOf": {
          "description": "JSON Schema [oneOf keyword](https://tools.ietf.org/html/draft-wright-json-schema-validation-00#section-5.24)",
          "type": "array",
          "items": {
            "$ref": "#/definitions/numberConstraints"
          }
        }
      },
      "additionalProperties": false
    },
    "numberParam": {
      "title": "numberParam",
      "description": "Number parameter of an op",
      "type": "object",
      "properties": {
        "number": {
          "properties": {
            "description": {
              "type": "string"
            },
            "default": {
              "type": "number"
            },
            "isSecret": {
              "description": "If the number is secret",
              "type": "boolean"
            },
            "constraints": {
              "$ref": "#/definitions/numberConstraints"
            }
          },
          "additionalProperties": false
        }
      },
      "additionalProperties": false,
      "required": [
        "number"
      ]
    },
    "objectConstraints": {
      "title": "objectConstraints",
      "type": "object",
      "properties": {
        "maxProperties": {
          "description": "JSON Schema [maxProperties keyword](https://tools.ietf.org/html/draft-wright-json-schema-validation-00#section-5.13)",
          "type": "integer",
          "minimum": 0
        },
        "minProperties": {
          "description": "JSON Schema [minProperties keyword](https://tools.ietf.org/html/draft-wright-json-schema-validation-00#section-5.14)",
          "type": "integer",
          "minimum": 0
        },
        "required": {
          "description": "JSON Schema [required keyword](https://tools.ietf.org/html/draft-wright-json-schema-validation-00#section-5.15)",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "properties": {
          "description": "JSON Schema [properties keyword](https://tools.ietf.org/html/draft-wright-json-schema-validation-00#section-5.16)",
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/typeConstraints"
          }
        },
        "patternProperties": {
          "description": "JSON Schema [patternProperties keyword](https://tools.ietf.org/html/draft-wright-json-schema-validation-00#section-5.17)",
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/typeConstraints"
          }
        },
        "additionalProperties": {
          "description": "JSON Schema [additionalProperties keyword](https://tools.ietf.org/html/draft-wright-json-schema-validation-00#section-5.18)",
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "$ref": "#/definitions/typeConstraints"
            }
          ]
        },
        "dependencies": {
          "description": "JSON Schema [dependencies keyword](https://tools.ietf.org/html/draft-wright-json-schema-validation-00#section-5.19)",
          "oneOf": [
            {
              "$ref": "#/definitions/typeConstraints"
            },
            {
              "items": {
                "type": "string"
              }
            }
          ]
        },
        "enum": {
          "description": "JSON Schema [enum keyword](https://tools.ietf.org/html/draft-wright-json-schema-validation-00#section-5.20)",
          "type": "array",
          "items": {
            "type": [
              "null",
              "object"
            ]
          }
        },
        "allOf": {
          "description": "JSON Schema [allOf keyword](https://tools.ietf.org/html/draft-wright-json-schema-validation-00#section-5.22)",
          "type": "array",
          "items": {
            "$ref": "#/definitions/objectConstraints"
          }
        },
        "anyOf": {
          "description": "JSON Schema [anyOf keyword](https://tools.ietf.org/html/draft-wright-json-schema-validation-00#section-5.23)",
          "type": "array",
          "items": {
            "$ref": "#/definitions/objectConstraints"
          }
        },
        "oneOf": {
          "description": "JSON Schema [oneOf keyword](https://tools.ietf.org/html/draft-wright-json-schema-validation-00#section-5.24)",
          "type": "array",
          "items": {
            "$ref": "#/definitions/objectConstraints"
          }
        },
        "not": {
          "description": "JSON Schema [not keyword](https://tools.ietf.org/html/draft-wright-json-schema-validation-00#section-5.25)",
          "$ref": "#/definitions/objectConstraints"
        }
      },
      "additionalProperties": false
    },
    "objectParam": {
      "title": "objectParam",
      "description": "Object parameter of an op",
      "type": "object",
      "properties": {
        "object": {
          "properties": {
            "description": {
              "type": "string"
            },
            "default": {
              "type": "object"
            },
            "isSecret": {
              "description": "If the object is secret",
              "type": "boolean"
            },
            "constraints": {
              "$ref": "#/definitions/objectConstraints"
            }
          },
          "additionalProperties": false
        }
      },
      "additionalProperties": false,
      "required": [
        "object"
      ]
    },
    "socketParam": {
      "title": "socketParam",
      "type": "object",
      "description": "Socket parameter of an op",
      "properties": {
        "socket": {
          "properties": {
            "description": {
              "type": "string"
            },
            "isSecret": {
              "description": "If the socket is secret",
              "type": "boolean"
            }
          },
          "additionalProperties": false
        }
      },
      "additionalProperties": false,
      "required": [
        "socket"
      ]
    },
    "stringConstraints": {
      "title": "stringConstraints",
      "type": "object",
      "properties": {
        "allOf": {
          "description": "JSON Schema [allOf keyword](https://tools.ietf.org/html/draft-wright-json-schema-validation-00#section-5.22)",
          "type": "array",
          "items": {
            "$ref": "#/definitions/stringConstraints"
          }
        },
        "anyOf": {
          "description": "JSON Schema [anyOf keyword](https://tools.ietf.org/html/draft-wright-json-schema-validation-00#section-5.23)",
          "type": "array",
          "items": {
            "$ref": "#/definitions/stringConstraints"
          }
        },
        "enum": {
          "description": "JSON Schema [enum keyword](https://tools.ietf.org/html/draft-wright-json-schema-validation-00#section-5.20)",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "format": {
          "description": "Superset of JSON Schema [format keyword](https://tools.ietf.org/html/draft-wright-json-schema-validation-00#section-7)",
          "oneOf": [
            {
              "title": "date-time",
              "description": "JSON Schema [date-time format](https://tools.ietf.org/html/draft-wright-json-schema-validation-00#section-7.3.1)",
              "type": "string",
              "enum": [
                "date-time"
              ]
            },
            {
              "title": "docker-image-ref",
              "description": "A docker image reference as defined by [github.com/docker/distribution/reference](https://github.com/docker/distribution/tree/docker/1.13/reference)",
              "type": "string",
              "enum": [
                "docker-image-ref"
              ]
            },
            {
              "title": "email",
              "description": "JSON Schema [email format](https://tools.ietf.org/html/draft-wright-json-schema-validation-00#section-7.3.2)",
              "type": "string",
              "enum": [
                "email"
              ]
            },
            {
              "title": "hostname",
              "description": "JSON Schema [hostname format](https://tools.ietf.org/html/draft-wright-json-schema-validation-00#section-7.3.3)",
              "type": "string",
              "enum": [
                "hostname"
              ]
            },
            {
              "title": "ipv4",
              "description": "JSON Schema [ipv4 format](https://tools.ietf.org/html/draft-wright-json-schema-validation-00#section-7.3.4)",
              "type": "string",
              "enum": [
                "ipv4"
              ]
            },
            {
              "title": "ipv6",
              "description": "JSON Schema [ipv6 format](https://tools.ietf.org/html/draft-wright-json-schema-validation-00#section-7.3.5)",
              "type": "string",
              "enum": [
                "ipv6"
              ]
            },
            {
              "title": "uri",
              "description": "JSON Schema [uri format](https://tools.ietf.org/html/draft-wright-json-schema-validation-00#section-7.3.6)",
              "type": "string",
              "enum": [
                "uri"
              ]
            },
            {
              "title": "semver",
              "description": "A semantic version as defined by [semver.org](http://semver.org/)",
              "type": "string",
              "enum": [
                "semver"
              ]
            }
          ]
        },
        "maxLength": {
          "description": "JSON Schema [minLength keyword](https://tools.ietf.org/html/draft-wright-json-schema-validation-00#section-5.6)",
          "type": "integer",
          "minimum": 1
        },
        "minLength": {
          "description": "JSON Schema [minLength keyword](https://tools.ietf.org/html/draft-wright-json-schema-validation-00#section-5.7)",
          "type": "integer",
          "minimum": 0,
          "default": 0
        },
        "not": {
          "description": "JSON Schema [not keyword](https://tools.ietf.org/html/draft-wright-json-schema-validation-00#section-5.25)",
          "$ref": "#/definitions/stringConstraints"
        },
        "oneOf": {
          "description": "JSON Schema [oneOf keyword](https://tools.ietf.org/html/draft-wright-json-schema-validation-00#section-5.24)",
          "type": "array",
          "items": {
            "$ref": "#/definitions/stringConstraints"
          }
        },
        "pattern": {
          "description": "JSON Schema [pattern keyword](https://tools.ietf.org/html/draft-wright-json-schema-validation-00#section-5.8)",
          "type": "string",
          "format": "regex"
        }
      },
      "additionalProperties": false
    },
    "stringParam": {
      "title": "stringParam",
      "type": "object",
      "description": "String parameter of an op",
      "properties": {
        "string": {
          "properties": {
            "description": {
              "type": "string"
            },
            "default": {
              "type": "string"
            },
            "isSecret": {
              "description": "If the string is secret",
              "type": "boolean"
            },
            "constraints": {
              "$ref": "#/definitions/stringConstraints"
            }
          },
          "additionalProperties": false
        }
      },
      "additionalProperties": false,
      "required": [
        "string"
      ]
    },
    "param": {
      "description": "Parameter of an op",
      "type": "object",
      "patternProperties": {
        "[-_.a-zA-Z0-9]+": {
          "oneOf": [
            {
              "$ref": "#/definitions/arrayParam"
            },
            {
              "$ref": "#/definitions/dirParam"
            },
            {
              "$ref": "#/definitions/fileParam"
            },
            {
              "$ref": "#/definitions/numberParam"
            },
            {
              "$ref": "#/definitions/objectParam"
            },
            {
              "$ref": "#/definitions/socketParam"
            },
            {
              "$ref": "#/definitions/stringParam"
            }
          ]
        }
      },
      "additionalProperties": false
    },
    "typeConstraints": {
      "title": "typeConstraints",
      "description": "Parameter constraints",
      "oneOf": [
        {
          "$ref": "#/definitions/arrayConstraints"
        },
        {
          "$ref": "#/definitions/numberConstraints"
        },
        {
          "$ref": "#/definitions/objectConstraints"
        },
        {
          "$ref": "#/definitions/stringConstraints"
        }
      ]
    },
    "scg": {
      "title": "scg",
      "description": "Static call graph of an op; see https://en.wikipedia.org/wiki/Call_graph",
      "oneOf": [
        {
          "$ref": "#/definitions/containerCall"
        },
        {
          "$ref": "#/definitions/opCall"
        },
        {
          "$ref": "#/definitions/parallelCall"
        },
        {
          "$ref": "#/definitions/serialCall"
        }
      ]
    },
    "containerCall": {
      "title": "containerCall",
      "type": "object",
      "properties": {
        "container": {
          "properties": {
            "cmd": {
              "description": "Command run by a container; overrides any set at the image level",
              "type": "array",
              "items": {
                "$ref": "#/definitions/interpolatedString"
              }
            },
            "dirs": {
              "type": "object",
              "description": "Directories in the container",
              "patternProperties": {
                "^([a-zA-Z]:)?[-_.\\/a-zA-Z0-9]+$": {
                  "oneOf": [
                    {
                      "description": "(will be bound to same path in package)",
                      "type": "null"
                    },
                    {
                      "description": "dir ref or path in package",
                      "type": "string"
                    }
                  ]
                }
              },
              "additionalProperties": false
            },
            "envVars": {
              "type": "object",
              "description": "Environment variables in the container",
              "patternProperties": {
                "^[^=]+$": {
                  "oneOf": [
                    {
                      "description": "(will be bound to in scope ref w/ same name)",
                      "type": "null"
                    },
                    {
                      "description": "string/number ref or string value",
                      "$ref": "#/definitions/interpolatedString"
                    }
                  ]
                }
              },
              "additionalProperties": false
            },
            "files": {
              "type": "object",
              "description": "Files in the container",
              "patternProperties": {
                "^([a-zA-Z]:)?[-_.\\/a-zA-Z0-9]+$": {
                  "oneOf": [
                    {
                      "description": "(will be bound to same path in package)",
                      "type": "null"
                    },
                    {
                      "description": "file/string/number ref or path in package",
                      "type": "string"
                    }
                  ]
                }
              },
              "additionalProperties": false
            },
            "image": {
              "type": "object",
              "properties": {
                "ref": {
                  "description": "Reference to an image",
                  "$ref": "#/definitions/interpolatedString"
                },
                "pullCreds": {
                  "$ref": "#/definitions/pullCreds"
                }
              },
              "required": [
                "ref"
              ],
              "additionalProperties": false
            },
            "name": {
              "description": "Name the container can be referenced by from other containers",
              "type": "string"
            },
            "ports": {
              "description": "Ports bound from the container to the host",
              "type": "object",
              "patternProperties": {
                "[0-9]+(-[0-9]+)?(tcp|udp)?": {
                  "description": "Host port(s) to bind to",
                  "type": "string",
                  "pattern": "[0-9]+(-[0-9]+)?"
                }
              },
              "additionalProperties": false
            },
            "sockets": {
              "type": "object",
              "patternProperties": {
                "[:a-zA-Z0-9]+": {
                  "description": "Container socket address mapped to a socket ref",
                  "type": "string"
                }
              },
              "additionalProperties": false
            },
            "stdErr": {
              "type": "object",
              "patternProperties": {
                "^.+$": {
                  "description": "Container stderr prefix mapped to a string ref",
                  "type": "string"
                }
              },
              "additionalProperties": false
            },
            "stdOut": {
              "type": "object",
              "patternProperties": {
                "^.+$": {
                  "description": "Container stdout prefix mapped to a string ref",
                  "type": "string"
                }
              },
              "additionalProperties": false
            },
            "workDir": {
              "description": "Working directory path (overrides any defined by image)",
              "type": "string"
            }
          },
          "required": [
            "image"
          ],
          "additionalProperties": false
        }
      },
      "required": [
        "container"
      ],
      "additionalProperties": false
    },
    "opCall": {
      "title": "opCall",
      "type": "object",
      "properties": {
        "op": {
          "type": "object",
          "properties": {
            "pkg": {
              "type": "object",
              "properties": {
                "ref": {
                  "description": "Reference to a pkg",
                  "type": "string",
                  "format": "uri-reference"
                },
                "pullCreds": {
                  "$ref": "#/definitions/pullCreds"
                }
              },
              "required": [
                "ref"
              ],
              "additionalProperties": false
            },
            "inputs": {
              "description": "Initializes INPUT_NAME from VALUE in format 'INPUT_NAME: VALUE'. If VALUE is null, it MUST be assumed VALUE = $(INPUT_NAME)",
              "type": "object",
              "patternProperties": {
                "[-_.a-zA-Z0-9]+": {
                  "oneOf": [
                    {
                      "type": "null"
                    },
                    {
                      "$ref": "#/definitions/interpolatedString"
                    },
                    {
                      "type": "number"
                    },
                    {
                      "type": "object"
                    }
                  ]
                }
              },
              "additionalProperties": false
            },
            "outputs": {
              "description": "Initializes NAME from OUTPUT_NAME in format 'NAME: OUTPUT_NAME'. If OUTPUT_NAME is null, it MUST be assumed NAME = $(OUTPUT_NAME)",
              "type": "object",
              "patternProperties": {
                "[-_.a-zA-Z0-9]+": {
                  "oneOf": [
                    {
                      "type": "null"
                    },
                    {
                      "type": "string"
                    }
                  ]
                }
              },
              "additionalProperties": false
            }
          },
          "oneOf": [
            {
              "required": [
                "pkg"
              ]
            },
            {
              "required": [
                "ref"
              ]
            }
          ],
          "additionalProperties": false
        }
      },
      "required": [
        "op"
      ],
      "additionalProperties": false
    },
    "parallelCall": {
      "title": "parallelCall",
      "type": "object",
      "properties": {
        "parallel": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/scg"
          }
        }
      },
      "required": [
        "parallel"
      ],
      "additionalProperties": false
    },
    "serialCall": {
      "title": "serialCall",
      "type": "object",
      "properties": {
        "serial": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/scg"
          }
        }
      },
      "required": [
        "serial"
      ],
      "additionalProperties": false
    },
    "interpolatedString": {
      "title": "interpolatedString",
      "description": "String supporting $(NAME) substitution syntax where $(NAME) will be replaced by the value of NAME at runtime",
      "type": "string"
    },
    "semVer": {
      "title": "semVer",
      "description": "v2.0.0 semantic version (see http://semver.org/spec/v2.0.0.html)",
      "type": "string",
      "pattern": "^([0-9]+)\\.([0-9]+)\\.([0-9]+)(?:(\\-[0-9A-Za-z-]+(?:\\.[0-9A-Za-z-]+)*))?(?:\\+[0-9A-Za-z-\\-\\.]+)?$"
    }
  }
}

