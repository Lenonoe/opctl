// This file was generated by counterfeiter
package core

import (
	"sync"

	"github.com/open-devops/engine/core/models"
)

type fakeGetEventStreamUseCase struct {
	ExecuteStub        func(subscriberEventChannel chan models.Event) (err error)
	executeMutex       sync.RWMutex
	executeArgsForCall []struct {
		subscriberEventChannel chan models.Event
	}
	executeReturns struct {
		result1 error
	}
}

func (fake *fakeGetEventStreamUseCase) Execute(subscriberEventChannel chan models.Event) (err error) {
	fake.executeMutex.Lock()
	fake.executeArgsForCall = append(fake.executeArgsForCall, struct {
		subscriberEventChannel chan models.Event
	}{subscriberEventChannel})
	fake.executeMutex.Unlock()
	if fake.ExecuteStub != nil {
		return fake.ExecuteStub(subscriberEventChannel)
	} else {
		return fake.executeReturns.result1
	}
}

func (fake *fakeGetEventStreamUseCase) ExecuteCallCount() int {
	fake.executeMutex.RLock()
	defer fake.executeMutex.RUnlock()
	return len(fake.executeArgsForCall)
}

func (fake *fakeGetEventStreamUseCase) ExecuteArgsForCall(i int) chan models.Event {
	fake.executeMutex.RLock()
	defer fake.executeMutex.RUnlock()
	return fake.executeArgsForCall[i].subscriberEventChannel
}

func (fake *fakeGetEventStreamUseCase) ExecuteReturns(result1 error) {
	fake.ExecuteStub = nil
	fake.executeReturns = struct {
		result1 error
	}{result1}
}
