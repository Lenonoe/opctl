// This file was generated by counterfeiter
package dockercompose

import (
	"sync"
)

type fakeCompositionRoot struct {
	InitDevOpUcExecuterStub        func() initDevOpUcExecuter
	initDevOpUcExecuterMutex       sync.RWMutex
	initDevOpUcExecuterArgsForCall []struct{}
	initDevOpUcExecuterReturns     struct {
		result1 initDevOpUcExecuter
	}
	RunDevOpUcExecuterStub        func() runDevOpUcExecuter
	runDevOpUcExecuterMutex       sync.RWMutex
	runDevOpUcExecuterArgsForCall []struct{}
	runDevOpUcExecuterReturns     struct {
		result1 runDevOpUcExecuter
	}
}

func (fake *fakeCompositionRoot) InitDevOpUcExecuter() initDevOpUcExecuter {
	fake.initDevOpUcExecuterMutex.Lock()
	fake.initDevOpUcExecuterArgsForCall = append(fake.initDevOpUcExecuterArgsForCall, struct{}{})
	fake.initDevOpUcExecuterMutex.Unlock()
	if fake.InitDevOpUcExecuterStub != nil {
		return fake.InitDevOpUcExecuterStub()
	} else {
		return fake.initDevOpUcExecuterReturns.result1
	}
}

func (fake *fakeCompositionRoot) InitDevOpUcExecuterCallCount() int {
	fake.initDevOpUcExecuterMutex.RLock()
	defer fake.initDevOpUcExecuterMutex.RUnlock()
	return len(fake.initDevOpUcExecuterArgsForCall)
}

func (fake *fakeCompositionRoot) InitDevOpUcExecuterReturns(result1 initDevOpUcExecuter) {
	fake.InitDevOpUcExecuterStub = nil
	fake.initDevOpUcExecuterReturns = struct {
		result1 initDevOpUcExecuter
	}{result1}
}

func (fake *fakeCompositionRoot) RunDevOpUcExecuter() runDevOpUcExecuter {
	fake.runDevOpUcExecuterMutex.Lock()
	fake.runDevOpUcExecuterArgsForCall = append(fake.runDevOpUcExecuterArgsForCall, struct{}{})
	fake.runDevOpUcExecuterMutex.Unlock()
	if fake.RunDevOpUcExecuterStub != nil {
		return fake.RunDevOpUcExecuterStub()
	} else {
		return fake.runDevOpUcExecuterReturns.result1
	}
}

func (fake *fakeCompositionRoot) RunDevOpUcExecuterCallCount() int {
	fake.runDevOpUcExecuterMutex.RLock()
	defer fake.runDevOpUcExecuterMutex.RUnlock()
	return len(fake.runDevOpUcExecuterArgsForCall)
}

func (fake *fakeCompositionRoot) RunDevOpUcExecuterReturns(result1 runDevOpUcExecuter) {
	fake.RunDevOpUcExecuterStub = nil
	fake.runDevOpUcExecuterReturns = struct {
		result1 runDevOpUcExecuter
	}{result1}
}
