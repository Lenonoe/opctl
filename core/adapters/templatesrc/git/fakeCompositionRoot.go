// This file was generated by counterfeiter
package git

import (
	"sync"
)

type fakeCompositionRoot struct {
	GetTemplateUseCaseStub        func() getTemplateUseCase
	getTemplateUseCaseMutex       sync.RWMutex
	getTemplateUseCaseArgsForCall []struct{}
	getTemplateUseCaseReturns     struct {
		result1 getTemplateUseCase
	}
}

func (fake *fakeCompositionRoot) GetTemplateUseCase() getTemplateUseCase {
	fake.getTemplateUseCaseMutex.Lock()
	fake.getTemplateUseCaseArgsForCall = append(fake.getTemplateUseCaseArgsForCall, struct{}{})
	fake.getTemplateUseCaseMutex.Unlock()
	if fake.GetTemplateUseCaseStub != nil {
		return fake.GetTemplateUseCaseStub()
	} else {
		return fake.getTemplateUseCaseReturns.result1
	}
}

func (fake *fakeCompositionRoot) GetTemplateUseCaseCallCount() int {
	fake.getTemplateUseCaseMutex.RLock()
	defer fake.getTemplateUseCaseMutex.RUnlock()
	return len(fake.getTemplateUseCaseArgsForCall)
}

func (fake *fakeCompositionRoot) GetTemplateUseCaseReturns(result1 getTemplateUseCase) {
	fake.GetTemplateUseCaseStub = nil
	fake.getTemplateUseCaseReturns = struct {
		result1 getTemplateUseCase
	}{result1}
}
