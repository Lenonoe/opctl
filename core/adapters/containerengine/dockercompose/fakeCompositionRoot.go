// This file was generated by counterfeiter
package dockercompose

import (
	"sync"
)

type fakeCompositionRoot struct {
	InitOperationUseCaseStub        func() initOperationUseCase
	initOperationUseCaseMutex       sync.RWMutex
	initOperationUseCaseArgsForCall []struct{}
	initOperationUseCaseReturns     struct {
		result1 initOperationUseCase
	}
	RunOperationUseCaseStub        func() runOperationUseCase
	runOperationUseCaseMutex       sync.RWMutex
	runOperationUseCaseArgsForCall []struct{}
	runOperationUseCaseReturns     struct {
		result1 runOperationUseCase
	}
}

func (fake *fakeCompositionRoot) InitOperationUseCase() initOperationUseCase {
	fake.initOperationUseCaseMutex.Lock()
	fake.initOperationUseCaseArgsForCall = append(fake.initOperationUseCaseArgsForCall, struct{}{})
	fake.initOperationUseCaseMutex.Unlock()
	if fake.InitOperationUseCaseStub != nil {
		return fake.InitOperationUseCaseStub()
	} else {
		return fake.initOperationUseCaseReturns.result1
	}
}

func (fake *fakeCompositionRoot) InitOperationUseCaseCallCount() int {
	fake.initOperationUseCaseMutex.RLock()
	defer fake.initOperationUseCaseMutex.RUnlock()
	return len(fake.initOperationUseCaseArgsForCall)
}

func (fake *fakeCompositionRoot) InitOperationUseCaseReturns(result1 initOperationUseCase) {
	fake.InitOperationUseCaseStub = nil
	fake.initOperationUseCaseReturns = struct {
		result1 initOperationUseCase
	}{result1}
}

func (fake *fakeCompositionRoot) RunOperationUseCase() runOperationUseCase {
	fake.runOperationUseCaseMutex.Lock()
	fake.runOperationUseCaseArgsForCall = append(fake.runOperationUseCaseArgsForCall, struct{}{})
	fake.runOperationUseCaseMutex.Unlock()
	if fake.RunOperationUseCaseStub != nil {
		return fake.RunOperationUseCaseStub()
	} else {
		return fake.runOperationUseCaseReturns.result1
	}
}

func (fake *fakeCompositionRoot) RunOperationUseCaseCallCount() int {
	fake.runOperationUseCaseMutex.RLock()
	defer fake.runOperationUseCaseMutex.RUnlock()
	return len(fake.runOperationUseCaseArgsForCall)
}

func (fake *fakeCompositionRoot) RunOperationUseCaseReturns(result1 runOperationUseCase) {
	fake.RunOperationUseCaseStub = nil
	fake.runOperationUseCaseReturns = struct {
		result1 runOperationUseCase
	}{result1}
}
