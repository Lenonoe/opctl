// This file was generated by counterfeiter
package dockercompose

import "sync"

type FakeInitOperationUseCase struct {
	ExecuteStub        func(operationName string) (err error)
	executeMutex       sync.RWMutex
	executeArgsForCall []struct {
		operationName string
	}
	executeReturns struct {
		result1 error
	}
}

func (fake *FakeInitOperationUseCase) Execute(operationName string) (err error) {
	fake.executeMutex.Lock()
	fake.executeArgsForCall = append(fake.executeArgsForCall, struct {
		operationName string
	}{operationName})
	fake.executeMutex.Unlock()
	if fake.ExecuteStub != nil {
		return fake.ExecuteStub(operationName)
	} else {
		return fake.executeReturns.result1
	}
}

func (fake *FakeInitOperationUseCase) ExecuteCallCount() int {
	fake.executeMutex.RLock()
	defer fake.executeMutex.RUnlock()
	return len(fake.executeArgsForCall)
}

func (fake *FakeInitOperationUseCase) ExecuteArgsForCall(i int) string {
	fake.executeMutex.RLock()
	defer fake.executeMutex.RUnlock()
	return fake.executeArgsForCall[i].operationName
}

func (fake *FakeInitOperationUseCase) ExecuteReturns(result1 error) {
	fake.ExecuteStub = nil
	fake.executeReturns = struct {
		result1 error
	}{result1}
}
