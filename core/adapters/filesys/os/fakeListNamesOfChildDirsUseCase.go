// This file was generated by counterfeiter
package os

import "sync"

type fakeListNamesOfChildDirsUseCase struct {
	ExecuteStub        func(pathToParentDir string) (namesOfChildDirs []string, err error)
	executeMutex       sync.RWMutex
	executeArgsForCall []struct {
		pathToParentDir string
	}
	executeReturns struct {
		result1 []string
		result2 error
	}
}

func (fake *fakeListNamesOfChildDirsUseCase) Execute(pathToParentDir string) (namesOfChildDirs []string, err error) {
	fake.executeMutex.Lock()
	fake.executeArgsForCall = append(fake.executeArgsForCall, struct {
		pathToParentDir string
	}{pathToParentDir})
	fake.executeMutex.Unlock()
	if fake.ExecuteStub != nil {
		return fake.ExecuteStub(pathToParentDir)
	} else {
		return fake.executeReturns.result1, fake.executeReturns.result2
	}
}

func (fake *fakeListNamesOfChildDirsUseCase) ExecuteCallCount() int {
	fake.executeMutex.RLock()
	defer fake.executeMutex.RUnlock()
	return len(fake.executeArgsForCall)
}

func (fake *fakeListNamesOfChildDirsUseCase) ExecuteArgsForCall(i int) string {
	fake.executeMutex.RLock()
	defer fake.executeMutex.RUnlock()
	return fake.executeArgsForCall[i].pathToParentDir
}

func (fake *fakeListNamesOfChildDirsUseCase) ExecuteReturns(result1 []string, result2 error) {
	fake.ExecuteStub = nil
	fake.executeReturns = struct {
		result1 []string
		result2 error
	}{result1, result2}
}
