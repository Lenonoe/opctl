// This file was generated by counterfeiter
package core

import (
  "sync"
)

type fakeCompositionRoot struct {
  AddDevOpUcExecuterStub                        func() addDevOpUcExecuter
  addDevOpUcExecuterMutex                       sync.RWMutex
  addDevOpUcExecuterArgsForCall                 []struct{}
  addDevOpUcExecuterReturns                     struct {
                                                  result1 addDevOpUcExecuter
                                                }
  AddPipelineUcExecuterStub                     func() addPipelineUcExecuter
  addPipelineUcExecuterMutex                    sync.RWMutex
  addPipelineUcExecuterArgsForCall              []struct{}
  addPipelineUcExecuterReturns                  struct {
                                                  result1 addPipelineUcExecuter
                                                }
  AddStageToPipelineUcExecuterStub              func() addStageToPipelineUcExecuter
  addStageToPipelineUcExecuterMutex             sync.RWMutex
  addStageToPipelineUcExecuterArgsForCall       []struct{}
  addStageToPipelineUcExecuterReturns           struct {
                                                  result1 addStageToPipelineUcExecuter
                                                }
  ListDevOpsUcExecuterStub                      func() listDevOpsUcExecuter
  listDevOpsUcExecuterMutex                     sync.RWMutex
  listDevOpsUcExecuterArgsForCall               []struct{}
  listDevOpsUcExecuterReturns                   struct {
                                                  result1 listDevOpsUcExecuter
                                                }
  ListPipelinesUcExecuterStub                   func() listPipelinesUcExecuter
  listPipelinesUcExecuterMutex                  sync.RWMutex
  listPipelinesUcExecuterArgsForCall            []struct{}
  listPipelinesUcExecuterReturns                struct {
                                                  result1 listPipelinesUcExecuter
                                                }
  RunDevOpUcExecuterStub                        func() runDevOpUcExecuter
  runDevOpUcExecuterMutex                       sync.RWMutex
  runDevOpUcExecuterArgsForCall                 []struct{}
  runDevOpUcExecuterReturns                     struct {
                                                  result1 runDevOpUcExecuter
                                                }
  RunPipelineUcExecuterStub                     func() runPipelineUcExecuter
  runPipelineUcExecuterMutex                    sync.RWMutex
  runPipelineUcExecuterArgsForCall              []struct{}
  runPipelineUcExecuterReturns                  struct {
                                                  result1 runPipelineUcExecuter
                                                }
  SetDescriptionOfDevOpUcExecuterStub           func() setDescriptionOfDevOpUcExecuter
  setDescriptionOfDevOpUcExecuterMutex          sync.RWMutex
  setDescriptionOfDevOpUcExecuterArgsForCall    []struct{}
  setDescriptionOfDevOpUcExecuterReturns        struct {
                                                  result1 setDescriptionOfDevOpUcExecuter
                                                }
  SetDescriptionOfPipelineUcExecuterStub        func() setDescriptionOfPipelineUcExecuter
  setDescriptionOfPipelineUcExecuterMutex       sync.RWMutex
  setDescriptionOfPipelineUcExecuterArgsForCall []struct{}
  setDescriptionOfPipelineUcExecuterReturns     struct {
                                                  result1 setDescriptionOfPipelineUcExecuter
                                                }
}

func (fake *fakeCompositionRoot) AddDevOpUcExecuter() addDevOpUcExecuter {
  fake.addDevOpUcExecuterMutex.Lock()
  fake.addDevOpUcExecuterArgsForCall = append(fake.addDevOpUcExecuterArgsForCall, struct{}{})
  fake.addDevOpUcExecuterMutex.Unlock()
  if fake.AddDevOpUcExecuterStub != nil {
    return fake.AddDevOpUcExecuterStub()
  } else {
    return fake.addDevOpUcExecuterReturns.result1
  }
}

func (fake *fakeCompositionRoot) AddDevOpUcExecuterCallCount() int {
  fake.addDevOpUcExecuterMutex.RLock()
  defer fake.addDevOpUcExecuterMutex.RUnlock()
  return len(fake.addDevOpUcExecuterArgsForCall)
}

func (fake *fakeCompositionRoot) AddDevOpUcExecuterReturns(result1 addDevOpUcExecuter) {
  fake.AddDevOpUcExecuterStub = nil
  fake.addDevOpUcExecuterReturns = struct {
    result1 addDevOpUcExecuter
  }{result1}
}

func (fake *fakeCompositionRoot) AddPipelineUcExecuter() addPipelineUcExecuter {
  fake.addPipelineUcExecuterMutex.Lock()
  fake.addPipelineUcExecuterArgsForCall = append(fake.addPipelineUcExecuterArgsForCall, struct{}{})
  fake.addPipelineUcExecuterMutex.Unlock()
  if fake.AddPipelineUcExecuterStub != nil {
    return fake.AddPipelineUcExecuterStub()
  } else {
    return fake.addPipelineUcExecuterReturns.result1
  }
}

func (fake *fakeCompositionRoot) AddPipelineUcExecuterCallCount() int {
  fake.addPipelineUcExecuterMutex.RLock()
  defer fake.addPipelineUcExecuterMutex.RUnlock()
  return len(fake.addPipelineUcExecuterArgsForCall)
}

func (fake *fakeCompositionRoot) AddPipelineUcExecuterReturns(result1 addPipelineUcExecuter) {
  fake.AddPipelineUcExecuterStub = nil
  fake.addPipelineUcExecuterReturns = struct {
    result1 addPipelineUcExecuter
  }{result1}
}

func (fake *fakeCompositionRoot) AddStageToPipelineUcExecuter() addStageToPipelineUcExecuter {
  fake.addStageToPipelineUcExecuterMutex.Lock()
  fake.addStageToPipelineUcExecuterArgsForCall = append(fake.addStageToPipelineUcExecuterArgsForCall, struct{}{})
  fake.addStageToPipelineUcExecuterMutex.Unlock()
  if fake.AddStageToPipelineUcExecuterStub != nil {
    return fake.AddStageToPipelineUcExecuterStub()
  } else {
    return fake.addStageToPipelineUcExecuterReturns.result1
  }
}

func (fake *fakeCompositionRoot) AddStageToPipelineUcExecuterCallCount() int {
  fake.addStageToPipelineUcExecuterMutex.RLock()
  defer fake.addStageToPipelineUcExecuterMutex.RUnlock()
  return len(fake.addStageToPipelineUcExecuterArgsForCall)
}

func (fake *fakeCompositionRoot) AddStageToPipelineUcExecuterReturns(result1 addStageToPipelineUcExecuter) {
  fake.AddStageToPipelineUcExecuterStub = nil
  fake.addStageToPipelineUcExecuterReturns = struct {
    result1 addStageToPipelineUcExecuter
  }{result1}
}

func (fake *fakeCompositionRoot) ListDevOpsUcExecuter() listDevOpsUcExecuter {
  fake.listDevOpsUcExecuterMutex.Lock()
  fake.listDevOpsUcExecuterArgsForCall = append(fake.listDevOpsUcExecuterArgsForCall, struct{}{})
  fake.listDevOpsUcExecuterMutex.Unlock()
  if fake.ListDevOpsUcExecuterStub != nil {
    return fake.ListDevOpsUcExecuterStub()
  } else {
    return fake.listDevOpsUcExecuterReturns.result1
  }
}

func (fake *fakeCompositionRoot) ListDevOpsUcExecuterCallCount() int {
  fake.listDevOpsUcExecuterMutex.RLock()
  defer fake.listDevOpsUcExecuterMutex.RUnlock()
  return len(fake.listDevOpsUcExecuterArgsForCall)
}

func (fake *fakeCompositionRoot) ListDevOpsUcExecuterReturns(result1 listDevOpsUcExecuter) {
  fake.ListDevOpsUcExecuterStub = nil
  fake.listDevOpsUcExecuterReturns = struct {
    result1 listDevOpsUcExecuter
  }{result1}
}

func (fake *fakeCompositionRoot) ListPipelinesUcExecuter() listPipelinesUcExecuter {
  fake.listPipelinesUcExecuterMutex.Lock()
  fake.listPipelinesUcExecuterArgsForCall = append(fake.listPipelinesUcExecuterArgsForCall, struct{}{})
  fake.listPipelinesUcExecuterMutex.Unlock()
  if fake.ListPipelinesUcExecuterStub != nil {
    return fake.ListPipelinesUcExecuterStub()
  } else {
    return fake.listPipelinesUcExecuterReturns.result1
  }
}

func (fake *fakeCompositionRoot) ListPipelinesUcExecuterCallCount() int {
  fake.listPipelinesUcExecuterMutex.RLock()
  defer fake.listPipelinesUcExecuterMutex.RUnlock()
  return len(fake.listPipelinesUcExecuterArgsForCall)
}

func (fake *fakeCompositionRoot) ListPipelinesUcExecuterReturns(result1 listPipelinesUcExecuter) {
  fake.ListPipelinesUcExecuterStub = nil
  fake.listPipelinesUcExecuterReturns = struct {
    result1 listPipelinesUcExecuter
  }{result1}
}

func (fake *fakeCompositionRoot) RunDevOpUcExecuter() runDevOpUcExecuter {
  fake.runDevOpUcExecuterMutex.Lock()
  fake.runDevOpUcExecuterArgsForCall = append(fake.runDevOpUcExecuterArgsForCall, struct{}{})
  fake.runDevOpUcExecuterMutex.Unlock()
  if fake.RunDevOpUcExecuterStub != nil {
    return fake.RunDevOpUcExecuterStub()
  } else {
    return fake.runDevOpUcExecuterReturns.result1
  }
}

func (fake *fakeCompositionRoot) RunDevOpUcExecuterCallCount() int {
  fake.runDevOpUcExecuterMutex.RLock()
  defer fake.runDevOpUcExecuterMutex.RUnlock()
  return len(fake.runDevOpUcExecuterArgsForCall)
}

func (fake *fakeCompositionRoot) RunDevOpUcExecuterReturns(result1 runDevOpUcExecuter) {
  fake.RunDevOpUcExecuterStub = nil
  fake.runDevOpUcExecuterReturns = struct {
    result1 runDevOpUcExecuter
  }{result1}
}

func (fake *fakeCompositionRoot) RunPipelineUcExecuter() runPipelineUcExecuter {
  fake.runPipelineUcExecuterMutex.Lock()
  fake.runPipelineUcExecuterArgsForCall = append(fake.runPipelineUcExecuterArgsForCall, struct{}{})
  fake.runPipelineUcExecuterMutex.Unlock()
  if fake.RunPipelineUcExecuterStub != nil {
    return fake.RunPipelineUcExecuterStub()
  } else {
    return fake.runPipelineUcExecuterReturns.result1
  }
}

func (fake *fakeCompositionRoot) RunPipelineUcExecuterCallCount() int {
  fake.runPipelineUcExecuterMutex.RLock()
  defer fake.runPipelineUcExecuterMutex.RUnlock()
  return len(fake.runPipelineUcExecuterArgsForCall)
}

func (fake *fakeCompositionRoot) RunPipelineUcExecuterReturns(result1 runPipelineUcExecuter) {
  fake.RunPipelineUcExecuterStub = nil
  fake.runPipelineUcExecuterReturns = struct {
    result1 runPipelineUcExecuter
  }{result1}
}

func (fake *fakeCompositionRoot) SetDescriptionOfDevOpUcExecuter() setDescriptionOfDevOpUcExecuter {
  fake.setDescriptionOfDevOpUcExecuterMutex.Lock()
  fake.setDescriptionOfDevOpUcExecuterArgsForCall = append(fake.setDescriptionOfDevOpUcExecuterArgsForCall, struct{}{})
  fake.setDescriptionOfDevOpUcExecuterMutex.Unlock()
  if fake.SetDescriptionOfDevOpUcExecuterStub != nil {
    return fake.SetDescriptionOfDevOpUcExecuterStub()
  } else {
    return fake.setDescriptionOfDevOpUcExecuterReturns.result1
  }
}

func (fake *fakeCompositionRoot) SetDescriptionOfDevOpUcExecuterCallCount() int {
  fake.setDescriptionOfDevOpUcExecuterMutex.RLock()
  defer fake.setDescriptionOfDevOpUcExecuterMutex.RUnlock()
  return len(fake.setDescriptionOfDevOpUcExecuterArgsForCall)
}

func (fake *fakeCompositionRoot) SetDescriptionOfDevOpUcExecuterReturns(result1 setDescriptionOfDevOpUcExecuter) {
  fake.SetDescriptionOfDevOpUcExecuterStub = nil
  fake.setDescriptionOfDevOpUcExecuterReturns = struct {
    result1 setDescriptionOfDevOpUcExecuter
  }{result1}
}

func (fake *fakeCompositionRoot) SetDescriptionOfPipelineUcExecuter() setDescriptionOfPipelineUcExecuter {
  fake.setDescriptionOfPipelineUcExecuterMutex.Lock()
  fake.setDescriptionOfPipelineUcExecuterArgsForCall = append(fake.setDescriptionOfPipelineUcExecuterArgsForCall, struct{}{})
  fake.setDescriptionOfPipelineUcExecuterMutex.Unlock()
  if fake.SetDescriptionOfPipelineUcExecuterStub != nil {
    return fake.SetDescriptionOfPipelineUcExecuterStub()
  } else {
    return fake.setDescriptionOfPipelineUcExecuterReturns.result1
  }
}

func (fake *fakeCompositionRoot) SetDescriptionOfPipelineUcExecuterCallCount() int {
  fake.setDescriptionOfPipelineUcExecuterMutex.RLock()
  defer fake.setDescriptionOfPipelineUcExecuterMutex.RUnlock()
  return len(fake.setDescriptionOfPipelineUcExecuterArgsForCall)
}

func (fake *fakeCompositionRoot) SetDescriptionOfPipelineUcExecuterReturns(result1 setDescriptionOfPipelineUcExecuter) {
  fake.SetDescriptionOfPipelineUcExecuterStub = nil
  fake.setDescriptionOfPipelineUcExecuterReturns = struct {
    result1 setDescriptionOfPipelineUcExecuter
  }{result1}
}
